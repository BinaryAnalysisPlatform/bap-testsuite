set test "api-main"

set testsuite {
    "arm-linux-gnueabi" {} {
        "sub main(main_argc, main_argv, main_result)"
        "main_argc :: in u32 = R0"
        "main_argv :: in out u32 = R1"
        "main_result :: out u32 = R0"
    }
    "arm-linux-androideabi" {} {
        "sub main(main_argc, main_argv, main_result)"
        "main_argc :: in u32 = R0"
        "main_argv :: in out u32 = R1"
        "main_result :: out u32 = R0"
    }
    "arm-linux-gnueabihf" {} {
        "sub main(main_argc, main_argv, main_result)"
        "main_argc :: in u32 = R0"
        "main_argv :: in out u32 = R1"
        "main_result :: out u32 = R0"
    }
    "i686-w64-mingw32" {--x86-abi=ms} {
        "sub main(main_argc, main_argv, main_result)"
        "main_argc :: in u32 = *"
        "main_argv :: in out u32 = *"
        "main_result :: out u32 = *"
    }
    "x86_64-w64-mingw32" {--x86-abi=ms} {
        "sub main(main_argc, main_argv, main_result)"
        "main_argc :: in u64 = *"
        "main_argv :: in out u64 = *"
        "main_result :: out u64 = *"
    }
    "x86_64-linux-gnu" "" {
        "sub main(main_argc, main_argv, main_result)"
        "main_argc :: in u64 = *"
        "main_argv :: in out u64 = *"
        "main_result :: out u64 = *"
    }
}


foreach {target extraopts lines} $testsuite {
    set file "$bindir/$target-echo"
    foreach line $lines {
        eval spawn bap "$file" [concat $extraopts {-d}]
        expect {
            $line {pass "$test <$line> in $target"}
            default {
                if [file exists $file ] {
                    fail "$test <$line> $target"
                } else {
                    untested "$test $target"
                }
            }
        }
    }
}
