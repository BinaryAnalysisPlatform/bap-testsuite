set test "api-options"

set data_dir [exec bap --api-list-paths]

# mk tmp file and a link on it
set api_file [exec mktemp]
set api_name [exec basename $api_file]
exec ln -s $api_file
set link $api_name

# mk tmp path with a c:tmp_file
set api_path [exec mktemp -d]
exec mkdir -p $api_path/c
exec cp $api_file $api_path/c

#   test case name     command      path       expected      exitcode   file    chmod
set cmds [subst {
    "api_show"           show       $api_path $api_name            0 ""            0
    "list-paths"         list-paths $api_path "$api_path"          0 ""            0
    "add api"            add        ""        "WARNING"            0 c:$api_file   0
    "add duplicate"      add        ""        "Will not overwrite" 1 c:$api_file   0
    "add not existed"    add        ""        "can't find api"     1 c:some_file   0
    "sanity check"       add        $api_path "Sanitization error" 1 c:$api_file   0
    "remove api"         rem        ""        "WARNING"            0 c:$api_file   0
    "remove api at path" rem        $api_path "WARNING"            0 c:$api_file   0
    "remove not existed" rem        ""        "Can't find api"     1 c:some_file   0
    "add api as a link"  add        ""        "WARNING"            0 c:$link       0
    "rem api as a link"  rem        ""        "WARNING"            0 c:$link       0
    "link as direcory"   add        $link     "not a directory"    1 c:$api_file   0
    "add to denied path" add        ""        "permission denied"  1 c:$api_file   1
    "add to next path"   add        $api_path "WARNING"            0 c:$api_file   1
}]

foreach {name cmd path expected exp_status file chmod} $cmds {
    if {$path == ""} {
        set full_cmd "--api-$cmd $file"
    } else {
        set full_cmd "--api-path $path --api-$cmd $file"
    }

    if {$chmod == 1} {
        exec chmod u-x $data_dir
    }

    uplevel 0 spawn bap $full_cmd
    set res_status [lindex [wait] 3]
    if {$exp_status == $res_status} {
        expect {
            $expected {pass "$test for $name"}
            default {fail "no diagnostic/wrong messages in $test for $name"}
        }
    } else {fail "unexpected exit status in $test for $name: $res_status"}

    if {$chmod == 1} {
        exec chmod u+x $data_dir
    }
}


exec rm $api_file
exec rm -r $api_path
exec rm $api_name
