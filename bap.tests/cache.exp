set test "cache"

proc check {patterns} {
    upvar 1 cache_dir dir
    match_all "" "" "cache --info --cache-dir=$dir" $patterns
}

# init cache and write exactly 10 Mb of data
proc init {} {
    set dir [exec mktemp -d]

    exec bap cache --size=5 --overhead=50 --cache-dir=$dir --disable-gc
    for {set x 0} {$x < 10} {incr x} {
        exec head -c 1048576 /dev/zero > $dir/.cache/bap/data/entry.$x
    }
    return $dir
}

set cache_dir [init]
set info [exec mktemp]

# Check that parameters are set correctly
# Check GC: when disabled current size > threshold
exec bap cache --info --cache-dir=$cache_dir  > $info
check {
    "Capacity: * 5 MB"       "set max_size"
    "GC threshold: * 7 MB"   "set threshold"
    "Overhead: * 50 %"       "set overhead"
    "GC enabled: * false"    "set no gc"
    "Current size: * 10 MB" "gc disabled"
}

# Check GC: when enabled  current size < threshold
exec bap cache --cache-dir=$cache_dir --enable-gc
check {
    "Current size: * 3 MB"  "gc enabled"
}

# Check that even gc is disabled it could be run via cmdline option,
# restore initial cache state for that.
exec rm -rf $cache_dir
set cache_dir [init]
exec bap cache --run-gc --cache-dir=$cache_dir

check {
    "Current size: * 3 MB" "run gc"
}

# clean up
exec rm -rf $cache_dir
