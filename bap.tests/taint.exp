set test "propagate taint"
set regs {ZF A0 R1}
set bir_attrs {tainted-reg tainted-regs visited dead}
set base_opts {
    --run
    --run-entry-points=all-subroutines
    --primus-limit-max-length=4096
    --primus-promiscuous-mode
    --primus-greedy-scheduler
    --primus-propagate-taint-from-attributes
    --primus-propagate-taint-to-attributes
    --primus-lisp-channel-redirect=<stdout>:stdout
}

set systems {
    bap:legacy-main
    bap:reflective-taint-analyzer
}

foreach reg $regs {lappend base_opts "--taint-reg=$reg"}
foreach attr $bir_attrs {lappend base_opts "--print-bir-attr=$attr"}

foreach system $systems {
    foreach file [find "bin" "*-echo"] {
        set tainted_regs 0
        set tainted_reg 0
        set visited 0
        set opts $base_opts
        if { $file == "bin/powerpc32-linux-gnu-echo" } {
            lappend opts "--api-path=api/powerpc"
        }

        lappend opts "--dump=bir:$file.out"
        lappend opts "--run-system=$system"
        set opts [join $opts " "]
        send_log "bap $file $opts"
        eval exec bap $file $opts
        non-zero-matches $file {\.tainted-reg} "introduce in $system"
        non-zero-matches $file {\.tainted-regs} "propagate in $system"
        non-zero-matches $file {\.visited} "visited in $system"
        if { [regexp "android|mips|w64-mingw" $file]} {
            exec rm -f "$file.out"
            continue
        } else {
            zero-matches $file {\.dead} "no-dead-code"
        }
        exec rm -f "$file.out"
        exec rm -f stdout
    }
}
