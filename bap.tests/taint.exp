set test "propagate taint"
setup-logs $test


set regs {ZF A0 R1 X1}
set bir_attrs {tainted-reg tainted-regs visited dead}
set base_opts {
    --run
    --run-entry-points=all-subroutines
    --primus-limit-max-length=4096
    --primus-promiscuous-mode
    --primus-greedy-scheduler
    --primus-propagate-taint-from-attributes
    --primus-propagate-taint-to-attributes
    --primus-lisp-channel-redirect=<stdout>:stdout
}

set systems {
    bap:legacy-main
    bap:reflective-taint-analyzer
}

foreach reg $regs {lappend base_opts "--taint-reg=$reg"}
foreach attr $bir_attrs {lappend base_opts "--print-bir-attr=$attr"}

foreach system $systems {
    foreach file [find "bin" "*-echo"] {
        set opts $base_opts
        if { $file == "bin/powerpc32-linux-gnu-echo" } {
            lappend opts "--api-path=api/powerpc"
        }

        lappend opts "--dump=bir"
        lappend opts "--run-system=$system"
        set opts [join $opts " "]

        set patterns [subst {
            "\.tainted-reg" "introduce in $system"
            "\.tainted-regs" "propagate in $system"
            "\.visited" "visited in $system"
        }]

        if { [regexp "android|mips|w64-mingw" $file]} {
            set bad_patterns {}
        } else {
            set bad_patterns {"\.dead" "no-dead-code"}
        }
        match_all bap "$file $opts" $patterns $bad_patterns

        exec rm -f stdout
    }
}
